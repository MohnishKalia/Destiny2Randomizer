{"version":3,"sources":["components/Header.tsx","components/Footer.tsx","data.ts","store.tsx","utils.ts","components/Match.tsx","components/Home.tsx","App.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginBottom","spacing","alignItems","menuButton","marginRight","title","Header","classes","AppBar","className","position","Toolbar","to","IconButton","edge","color","aria-label","Typography","variant","createStyles","marginTop","Footer","maps","reducer","state","action","type","mapIndex","findIndex","map","name","selected","players","push","selectedClass","index","splice","teams","Error","startingMaps","defaultState","Object","keys","forEach","obj","includes","myContext","createContext","useStateContext","useContext","StateProvider","props","useReducer","dispatch","Provider","value","children","randomSelection","array","numValues","length","result","i","valueToInsert","randomIndex","Math","floor","random","maxWidth","media","filter","overlay","top","left","transform","table","minWidth","Match","styles","selectedMap","useMemo","validPlayers","player","trim","randomSubclass","randomTree","info","imgUrl","icon","display","shuffle","alphaTeam","ceil","bravoTeam","Card","CardMedia","component","alt","image","Box","m","Grid","container","item","xs","md","List","ListItem","ListItemAvatar","Avatar","src","ListItemText","primary","secondary","style","textDecoration","Button","paper","padding","textAlign","palette","text","mb2","card","flexDirection","gap","Home","align","Paper","FormControlLabel","control","Checkbox","checked","onChange","_","label","clsx","CardActions","noValidate","autoComplete","onSubmit","e","preventDefault","TextField","size","target","ToggleButtonGroup","exclusive","selClass","ToggleButton","marginLeft","onClick","App","prefersDarkMode","useMediaQuery","createMuiTheme","ThemeProvider","CssBaseline","Container","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8c0a54f.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nimport LowPriority from '@material-ui/icons/LowPriority';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n        marginBottom: theme.spacing(2),\n        alignItems: 'center'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nexport default function Header() {\n    const classes = useStyles();\n    return (\n        <AppBar className={classes.root} position=\"static\">\n            <Toolbar>\n                <Link to=\"/\">\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"default\" aria-label=\"menu\">\n                        <LowPriority />\n                    </IconButton>\n                </Link>\n                <Typography variant=\"h6\" className={classes.title}>\n                    Crucible Randomizer\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n}\n","import React from 'react'\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: '30vh',\n        },\n    }),\n);\n\nexport default function Footer() {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n\n        </div>\n    )\n}\n","export const maps = {\n  \"Altar of Flame\": \"https://bungie.net/img/destiny_content/pgcr/crucible_ness.jpg\",\n  \"The Anomaly\": \"https://bungie.net/img/destiny_content/pgcr/crucible_the_anomaly.jpg\",\n  \"Bannerfall\": \"https://bungie.net/img/destiny_content/pgcr/crucible_bannerfall.jpg\",\n  \"The Burnout\": \"https://bungie.net/img/destiny_content/pgcr/pvp_the_burnout.jpg\",\n  \"Cauldron\": \"https://bungie.net/img/destiny_content/pgcr/crucible_cauldron.jpg\",\n  \"Convergence\": \"https://bungie.net/img/destiny_content/pgcr/pvp_longshot_2.jpg\",\n  \"The Dead Cliffs\": \"https://bungie.net/img/destiny_content/pgcr/crucible_cliffside.jpg\",\n  \"Distant Shore\": \"https://bungie.net/img/destiny_content/pgcr/crucible_distant_shore.jpg\",\n  \"Endless Vale\": \"https://bungie.net/img/destiny_content/pgcr/crucible_grove.jpg\",\n  \"Exodus Blue\": \"https://bungie.net/img/destiny_content/pgcr/crucible_exodus_blue.jpg\",\n  \"The Fortress\": \"https://bungie.net/img/destiny_content/pgcr/crucible_hull.jpg\",\n  \"Fragment\": \"https://bungie.net/img/destiny_content/pgcr/crucible_fragment.jpg\",\n  \"Javelin-4\": \"https://bungie.net/img/destiny_content/pgcr/crucible_shaft.jpg\",\n  \"Midtown\": \"https://bungie.net/img/destiny_content/pgcr/crucible_midtown.jpg\",\n  \"Pacifica\": \"https://bungie.net/img/destiny_content/pgcr/pvp_pacifica.jpg\",\n  \"Radiant Cliffs\": \"https://bungie.net/img/destiny_content/pgcr/pvp_radiant_cliffs.jpg\",\n  \"Rusted Lands\": \"https://bungie.net/img/destiny_content/pgcr/crucible_rusted_lands.jpg\",\n  \"Twilight Gap\": \"https://bungie.net/img/destiny_content/pgcr/crucible_twilight_gap.jpg\",\n  \"Widow's Court\": \"https://bungie.net/img/destiny_content/pgcr/crucible_widows_court.jpg\",\n  \"Wormhaven\": \"https://bungie.net/img/destiny_content/pgcr/pvp_wormhaven.jpg\"\n};\nexport const classes = {\n  \"hunter\": {\n    \"arc\": {\n      \"name\": \"Arcstrider\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/83c478558665bbadd251d80d3d05bc2e.png\"\n    },\n    \"void\": {\n      \"name\": \"Nightstalker\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fa3084d2798d59db7b3419a2fae1bf0c.png\"\n    },\n    \"solar\": {\n      \"name\": \"Gunslinger\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fedcb91b7ab0584c12f0e9fec730702b.png\"\n    }\n  },\n  \"warlock\": {\n    \"arc\": {\n      \"name\": \"Stormcaller\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/83c478558665bbadd251d80d3d05bc2e.png\"\n    },\n    \"solar\": {\n      \"name\": \"Dawnblade\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fedcb91b7ab0584c12f0e9fec730702b.png\"\n    },\n    \"void\": {\n      \"name\": \"Voidwalker\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fa3084d2798d59db7b3419a2fae1bf0c.png\"\n    }\n  },\n  \"titan\": {\n    \"arc\": {\n      \"name\": \"Striker\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/83c478558665bbadd251d80d3d05bc2e.png\"\n    },\n    \"solar\": {\n      \"name\": \"Sunbreaker\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fedcb91b7ab0584c12f0e9fec730702b.png\"\n    },\n    \"void\": {\n      \"name\": \"Sentinel\",\n      \"icon\": \"https://bungie.net/common/destiny2_content/icons/fa3084d2798d59db7b3419a2fae1bf0c.png\"\n    }\n  }\n};\n","import { createContext, useContext, useReducer } from 'react';\nimport { maps, classes } from './data';\n\nexport interface PVPMap {\n    name: keyof typeof maps;\n    selected: boolean;\n}\n\nexport interface Player {\n    name: string;\n    selectedClass: keyof typeof classes;\n}\n\nexport interface StateContext {\n    maps: PVPMap[];\n    players: Player[];\n    teams: boolean;\n}\n\nexport interface Store {\n    state: StateContext;\n    dispatch?: React.Dispatch<Action>;\n}\n\nexport type Action =\n    { type: 'edit_map' } & PVPMap\n    | { type: 'add_player' }\n    | { type: 'edit_player' } & Player & { index: number }\n    | { type: 'remove_player' } & { index: number }\n    | { type: 'edit_teams' } & { selected: boolean };\n\nexport const reducer = (state: StateContext, action: Action): StateContext => {\n    switch (action.type) {\n        case 'edit_map': {\n            const mapIndex = state.maps.findIndex(map => map.name === action.name);\n            state.maps[mapIndex].selected = action.selected;\n            return { ...state };\n        }\n        case 'add_player': {\n            state.players.push({ name: '', selectedClass: 'hunter' });\n            return { ...state };\n        }\n        case 'edit_player': {\n            state.players[action.index] = { name: action.name, selectedClass: action.selectedClass };\n            return { ...state };\n        }\n        case 'remove_player': {\n            state.players.splice(action.index, 1);\n            return { ...state };\n        }\n        case 'edit_teams': {\n            state.teams = action.selected;\n            return { ...state };\n        }\n        default:\n            throw new Error('Not among actions');\n    }\n};\n\nconst startingMaps: (keyof typeof maps)[] = [\n    'Distant Shore',\n    'Endless Vale',\n    'Javelin-4',\n    'The Anomaly',\n    'The Burnout',\n    'Wormhaven',\n];\n\nconst defaultState: StateContext = { maps: [], players: [\n    {\n        name: 'UnshiftedOcean',\n        selectedClass: 'hunter',\n    },\n    {\n        name: 'TheShadowReborn',\n        selectedClass: 'hunter',\n    },\n    {\n        name: 'TheLegendAve',\n        selectedClass: 'warlock',\n    },\n    {\n        name: 'BoulderPanda',\n        selectedClass: 'titan',\n    },\n    {\n        name: 'Bicreeper',\n        selectedClass: 'titan',\n    },\n], teams: true };\n(Object.keys(maps) as (keyof typeof maps)[]).forEach(map => {\n    const obj = { name: map, selected: false };\n    if (startingMaps.includes(map))\n        obj.selected = true;\n    defaultState.maps.push(obj);\n});\n\n\nconst myContext = createContext<Store>({ state: defaultState });\n\nexport const useStateContext = () => useContext(myContext);\n\nexport const StateProvider = (props: any) => {\n    const [state, dispatch] = useReducer(reducer, defaultState);\n    return <myContext.Provider value={{ state, dispatch }} children={props.children} />;\n};\n","/**\n * Gets a number of random values from an array\n * @param {T[]} array the array of values to pull from\n * @param {number} numValues the number of values to return\n * @template T\n * @returns a dependent randomized selection from the array\n */\nexport function randomSelection<T>(array: T[], numValues: number = 1) {\n    if (array.length < numValues)\n        throw new Error('Too many random values requested');\n\n    const result: T[] = [];\n    for (let i = 0; i < numValues; i++) {\n        let valueToInsert;\n        do {\n            const randomIndex = Math.floor(Math.random() * array.length);\n            valueToInsert = array[randomIndex];\n        } while (result.includes(valueToInsert));\n        result.push(valueToInsert);\n    }\n    return result;\n}\n\nexport function shuffle(array: any[]) {\n    for (let i = array.length - 1; i > 0; i--) {\n        let randomIndex = Math.floor(Math.random() * (i + 1));\n        [array[i], array[randomIndex]] = [array[randomIndex], array[i]];\n    }\n}\n","import React, { useMemo } from 'react'\nimport { useStateContext } from '../store';\nimport { randomSelection } from '../utils';\nimport { maps } from '../data';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { classes } from '../data'\nimport { shuffle } from '../utils'\nimport Box from '@material-ui/core/Box';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            maxWidth: '100%',\n            position: 'relative',\n        },\n        media: {\n            filter: 'brightness(40%)',\n        },\n        overlay: {\n            position: 'absolute',\n            top: '50%',\n            left: '50%',\n            transform: 'translate(-50%, -50%)',\n            color: 'white',\n        },\n        table: {\n            minWidth: 650,\n        },\n    }),\n);\n\nexport default function Match() {\n    const styles = useStyles();\n    const { state } = useStateContext();\n    const selectedMap = useMemo(() => {\n        const selectedMaps = state.maps.filter(map => map.selected).map(map => map.name);\n        const [selectedMap] = randomSelection(selectedMaps, 1);\n        return selectedMap;\n    }, [state.maps]);\n\n    const players = useMemo(() => {\n        const validPlayers = state.players.filter(player => player.name.trim()).map(player => {\n            const validSubclasses = Object.keys(classes[player.selectedClass]);\n            const [randomSubclass] = randomSelection(validSubclasses, 1) as [keyof (typeof classes[(keyof typeof classes)])];\n            const trees = ['Top', 'Middle', 'Bottom'];\n            const [randomTree] = randomSelection(trees, 1);\n            const info = classes[player.selectedClass][randomSubclass];\n            return { ...player, imgUrl: info.icon, display: `${randomTree} Tree ${info.name}` }\n        });\n        if (state.teams) {\n            shuffle(validPlayers);\n            const alphaTeam = validPlayers.splice(0, Math.ceil(validPlayers.length / 2));\n            return { teams: true, alphaTeam, bravoTeam: validPlayers };\n        }\n        return { teams: false, players: validPlayers };\n    }, [state.players, state.teams]);\n\n    return (\n        <div>\n            <Card className={styles.root}>\n                <CardMedia\n                    component=\"img\"\n                    alt=\"Contemplative Reptile\"\n                    image={maps[selectedMap]}\n                    title=\"Contemplative Reptile\"\n                    className={styles.media}\n                />\n                <div className={styles.overlay}>\n                    <Typography variant=\"button\">The Random Map Is:</Typography>\n                    <Typography variant=\"h3\">{selectedMap}</Typography>\n                </div>\n            </Card>\n            <Box m={2}>\n                <Grid container spacing={3}>\n                    {players.teams\n                        ? (\n                            <>\n                                <Grid item xs={12} md={6}>\n                                    <Typography variant=\"h5\">Alpha Team</Typography>\n                                    <List>\n                                        {players.alphaTeam!.map((player, i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar>\n                                                    <Avatar src={player.imgUrl} />\n                                                </ListItemAvatar>\n                                                <ListItemText primary={player.name} secondary={player.display} />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </Grid>\n                                <Grid item xs={12} md={6}>\n                                    <Typography variant=\"h5\">Beta Team</Typography>\n                                    <List>\n                                        {players.bravoTeam!.map((player, i) => (\n                                            <ListItem key={i}>\n                                                <ListItemAvatar>\n                                                    <Avatar src={player.imgUrl} />\n                                                </ListItemAvatar>\n                                                <ListItemText primary={player.name} secondary={player.display} />\n                                            </ListItem>\n                                        ))}\n                                    </List>\n                                </Grid>\n                            </>\n                        )\n                        : (\n                            <Grid item xs={12}>\n                                <Typography variant=\"h5\">Players</Typography>\n                                <List>\n                                    {players.players!.map((player, i) => (\n                                        <ListItem key={i}>\n                                            <ListItemAvatar>\n                                                <Avatar src={player.imgUrl} />\n                                            </ListItemAvatar>\n                                            <ListItemText primary={player.name} secondary={player.display} />\n                                        </ListItem>\n                                    ))}\n                                </List>\n                            </Grid>\n                        )\n                    }\n                </Grid>\n            </Box>\n            <Link to=\"/\" style={{ textDecoration: 'none' }}>\n                <Button variant=\"contained\" color=\"primary\">\n                    Return To Configuration\n                </Button>\n            </Link>\n        </div>\n    );\n}\n","import React from 'react'\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Paper from '@material-ui/core/Paper';\nimport { useStateContext } from '../store';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport createStyles from '@material-ui/core/styles/createStyles';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport ToggleButton from '@material-ui/lab/ToggleButton';\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\nimport LocalDining from '@material-ui/icons/LocalDining';\nimport Whatshot from '@material-ui/icons/Whatshot';\nimport Security from '@material-ui/icons/Security';\nimport Delete from '@material-ui/icons/Delete';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            padding: theme.spacing(1),\n            textAlign: 'center',\n            color: theme.palette.text.secondary,\n        },\n        mb2: {\n            marginBottom: theme.spacing(2)\n        },\n        card: {\n            minWidth: 300\n        },\n        players: {\n            display: 'flex',\n            flexDirection: 'column',\n            gap: theme.spacing(3)\n        }\n    }),\n);\n\nexport default function Home() {\n    const styles = useStyles();\n    const { state, dispatch } = useStateContext();\n    return (\n        <>\n            <Typography variant=\"h2\" align=\"center\" className={styles.mb2}>Select Maps</Typography>\n            <Grid container spacing={3} className={styles.mb2}>\n                {state.maps.map(({ name, selected }) => (\n                    <Grid item xs={6} md={4} key={name}>\n                        <Paper className={styles.paper}>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={selected}\n                                        onChange={(_, checked) => dispatch?.({ type: 'edit_map', name, selected: checked })}\n                                        color=\"primary\"\n                                    />\n                                }\n                                label={name}\n                            />\n                        </Paper>\n                    </Grid>\n                ))}\n            </Grid>\n\n            <Typography variant=\"h2\" align=\"center\" className={styles.mb2}>Add Players</Typography>\n            <FormControlLabel\n                control={\n                    <Checkbox\n                        checked={state.teams}\n                        onChange={(_, checked) => dispatch?.({ type: 'edit_teams', selected: checked })}\n                        color=\"primary\"\n                    />\n                }\n                label=\"Separate Into Teams\"\n            />\n            <Paper className={clsx(styles.paper, styles.mb2, styles.players)}>\n                {state.players.map((player, i) => (\n                    <Card className={styles.card} variant=\"outlined\" key={i}>\n                        <CardActions>\n                            <form noValidate autoComplete=\"off\" onSubmit={(e) => { e.preventDefault() }}>\n                                <TextField label=\"Name\" value={player.name} variant=\"standard\" size=\"small\" onChange={(e) =>\n                                    dispatch?.({ type: 'edit_player', index: i, name: e.target.value, selectedClass: player.selectedClass })} />\n                            </form>\n                            <ToggleButtonGroup\n                                value={player.selectedClass}\n                                exclusive\n                                size=\"small\"\n                                onChange={(_, selClass) => selClass &&\n                                    dispatch?.({ type: 'edit_player', index: i, name: player.name, selectedClass: selClass })}\n                                aria-label=\"class select\"\n                            >\n                                <ToggleButton value=\"hunter\" aria-label=\"hunter\">\n                                    <LocalDining />\n                                </ToggleButton>\n                                <ToggleButton value=\"warlock\" aria-label=\"warlock\">\n                                    <Whatshot />\n                                </ToggleButton>\n                                <ToggleButton value=\"titan\" aria-label=\"titan\">\n                                    <Security />\n                                </ToggleButton>\n                            </ToggleButtonGroup>\n                            <IconButton aria-label=\"delete\" style={{ marginLeft: 'auto' }} onClick={() => dispatch?.({ type: 'remove_player', index: i })}>\n                                <Delete />\n                            </IconButton>\n                        </CardActions>\n                    </Card>\n                ))}\n                <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch?.({ type: 'add_player' })}>\n                    Add Player\n                </Button>\n            </Paper>\n\n            <Link to=\"/match\" style={{ textDecoration: 'none' }}>\n                <Button variant=\"contained\" color=\"primary\">\n                    Randomize!\n                </Button>\n            </Link>\n        </>\n    );\n}\n","import React, { useMemo } from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from 'react-router-dom';\nimport Match from './components/Match';\nimport Home from './components/Home';\nimport { StateProvider } from './store';\n\nfunction App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const theme = useMemo(\n        () =>\n            createMuiTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n\n    return (\n        <ThemeProvider theme={theme}>\n            <StateProvider>\n                <CssBaseline />\n                <Router>\n                    <div>\n                        <Header />\n                        <Container maxWidth=\"lg\">\n                            <Grid container spacing={3}>\n                                <Grid container item alignItems=\"center\">\n                                    <Grid item md={2}></Grid>\n                                    <Grid item xs={12} md={8}>\n                                        <Switch>\n                                            <Route path=\"/match\">\n                                                <Match />\n                                            </Route>\n                                            <Route path=\"/\">\n                                                <Home />\n                                            </Route>\n                                        </Switch>\n                                    </Grid>\n                                    <Grid item md={2}></Grid>\n                                </Grid>\n                            </Grid>\n                        </Container>\n                        <Footer />\n                    </div>\n                </Router>\n            </StateProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}